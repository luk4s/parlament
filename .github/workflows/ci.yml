name: Docker Build, Test and Push

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          push: false
          tags: luk4s/parlament:test
          outputs: type=docker,dest=/tmp/parlament.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myimage
          path: /tmp/parlament.tar
  test:
    needs: build
    runs-on: ubuntu-latest
    env:
      DATABASE_HOST: localhost
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      # Rails verifies the time zone in DB is the same as the time zone of the Rails app
      TZ: "Europe/Prague"
    services:
      # https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: parlament_test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        # tmpfs makes DB faster by using RAM
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: myimage
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/parlament.tar
          docker image ls -a
      - name: Prepare .env
        run: |
          echo "DATABASE_HOST=$DATABASE_HOST" >> .env.test
          echo "POSTGRES_USER=$POSTGRES_USER" >> .env.test
          echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env.test
          echo "RAILS_ENV=test" >> .env.test
          echo "RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}" >> .env.test
      - name: Run linter
        run: docker run --rm --env-file .env.test --entrypoint "" luk4s/parlament:test bundle exec rubocop
      - name: Run tests
        run: docker run --network host --rm --env-file .env.test --entrypoint "" luk4s/parlament:test bundle exec rspec
  release:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    if: ${{ github.ref_name == 'main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: myimage
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/parlament.tar
          docker image ls -a
      - name: Read .version
        id: vars
        run: echo "version=$(cat .version)" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.version }}
            ghcr.io/${{ github.repository }}:latest
